server {
    listen 8080;
    server_name _;

    # Log format déplacé dans nginx.conf
    error_log /var/log/nginx/error.log warn;

    # Service misc
    location ~ ^/api/misc {
        proxy_pass http://misc-service:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Protection contre les abus
        limit_req zone=api_limit burst=20 nodelay;
        
        # Timeout augmenté pour les requêtes lourdes
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Route spécifique pour /api/misc/time
    location = /api/misc/time {
        proxy_pass http://misc-service:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Protection contre les abus
        limit_req zone=api_limit burst=20 nodelay;
    }

    # Service product
    location ~ ^/api/products(/|$) {
        proxy_pass http://product-service:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Protection contre les abus
        limit_req zone=api_limit burst=5 nodelay;
        
        # Timeout augmenté pour les requêtes DB
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Service order
    location ~ ^/api/orders(/|$) {
        proxy_pass http://order-service:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Protection contre les abus
        limit_req zone=api_limit burst=2 nodelay;
    }

    # Pour les endpoints ping de chaque service
    location = /api/ping {
        proxy_pass http://misc-service:5000;
    }

    # Error page personnalisée pour les limitation de débit
    error_page 503 /rate_limit_exceeded.html;
    location = /rate_limit_exceeded.html {
        return 503 '{"error": "Rate limit exceeded", "message": "Too many requests", "status": 503}';
        default_type application/json;
    }

    # Frontend
    location / {
        proxy_pass http://front:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Limitation de la vitesse pour simuler un trafic élevé
        limit_rate 300k;
    }
}